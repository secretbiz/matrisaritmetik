@page
@model MatrisAritmetik.Pages.VeriModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
    bool failedToGetSpecials = false;
    if(ViewData["special_optiondict"] == null || ((List<MatrisAritmetik.Core.Models.CommandLabel>)ViewData["special_optiondict"]).Count == 0)
    {
        failedToGetSpecials = true;
    }

}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Veri Analizi</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" asp-append-version="true">

    @* JQuery için *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    @* Tablar için *@
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    @* Chart.js *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.min.js" integrity="sha512-SuxO9djzjML6b9w9/I07IWnLnQhgyYVSpHZx0JV97kGBfTIsUYlWflyuW4ypnvhBrslz1yJ3R+S14fdCWmSmSA==" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css" integrity="sha512-C7hOmCgGzihKXzyPU/z4nv97W0d9bv4ALuuEbSf6hm93myico9qa0hv4dODThvCsqQUmKmLcJmlpRmCaApr83g==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css" integrity="sha512-C7hOmCgGzihKXzyPU/z4nv97W0d9bv4ALuuEbSf6hm93myico9qa0hv4dODThvCsqQUmKmLcJmlpRmCaApr83g==" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js" integrity="sha512-hZf9Qhp3rlDJBvAKvmiG+goaaKRZA6LKUO35oK6EsM0/kjPK32Yw7URqrq3Q+Nvbbt8Usss+IekL7CRn83dYmw==" crossorigin="anonymous"></script>

    <script src="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js"></script>
    <link href="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css" rel="stylesheet" />
    <style>
        .ui-resizable-e {
            width: 14px !important;
            border-right: 7px solid #2d3773 !important;
            margin-right: 2px;
            z-index: 0 !important;
        }
    </style>
</head>
<body>

    @* Nav *@
    <div class="navcolumn_df" onclick="openNav()">
        <span style="font-size:15px;padding-left: 2px">&#9776;</span>
    </div>
    <div id="df_sidenav" class="sidenav">
        <a href="javascript:void(0)">
            <p class="sidenav_linkstitle">
                <u>  Linkler</u>
            </p>
            <span class="closebtn" onclick="closeNav()">
                &times;
            </span>
        </a>
        <a href="/Matris">Matris aritmetiği</a>
        <a href="/Veri">Veri analizi</a>
        <a href="https://github.com/secretbiz/matrisaritmetik">Kaynak Kod</a>
    </div>


    @* Panelleri sarar *@
    <div id="panel_container">

        @* Sol panel *@
        <div id="left_panel_df">

            @* Panel başlığı ve tab satırı *@
            <div id="veri_title_left">
                <h2>Veri Tabloları</h2>

                <div class="container tabrow">

                    @* Tablar *@
                    <ul class="nav nav-tabs" style="width:fit-content">

                        @* Yazıdan *@
                        <li id="veri_create_bytext_parent" class="active"><a id="veri_create_bytext">Yazıdan</a></li>

                        @* Dosyadan *@
                        <li id="veri_create_fromfile_parent" class=""><a id="veri_create_fromfile">Dosyadan</a></li>

                        @if (!failedToGetSpecials)
                        {
                            @* Özel matris dropdown menü partial *@
                            <select id="special_veri_options">
                                <partial name="_SpecialSelectionPartial" model=@ViewData["special_optiondict"] />
                            </select>
                        }

                    </ul>

                </div>

            </div>

            @* Matris ekleme bilgileri satırı *@
            <div id="veri_add_table">

                <input type="text" id="veri_name" placeholder="Tablo ismi" contenteditable="true" spellcheck="false"/>
                <span id="veri_add_eqsign">=</span>

                @* Özel matris ekleme inputları*@
                <textarea name="veri_vals_special" id="veri_vals_special" style="display:none" readonly="readonly"></textarea>
                <input type="text" id="veri_special_args" style="display:none" placeholder="Parametre:Değer" />

                @* Text ile matris ekleme inputları*@
                <textarea name="veri_vals" id="veri_vals" placeholder="Elementler" contenteditable="true" spellcheck="false"></textarea>

                @*Dosyadan*@
                <input id="veri_file_button" name="veri_file_button" type="file" size="1" accept=".csv,.txt" />

                @* Ayraçlar *@
                <div id="veri_options_column" class="custom_delim_newline">

                    <select class="custom_spacer_select"
                            onchange="document.getElementById('displaySelectedSpacer').value=this.options[this.selectedIndex].text.split(' ')[1]==undefined?' ':this.options[this.selectedIndex].text.split(' ')[1]; document.getElementById('selectedSpacer').value=this.options[this.selectedIndex].value;">
                        <option style="background-color:grey;color:white" value="default">Değer_ayracı  </option>
                        <option value="space">Boşluk  </option>
                        <option value="tab">Tab \t</option>
                        <option value="comma">Virgül ,</option>
                    </select>
                    <input type="text" name="displaySelectedSpacer" id="displaySelectedSpacer"
                           placeholder='Değer_ayracı  ' onfocus="this.select()"
                           class="custom_spacer_displayer">
                    <input name="selectedSpacer" id="selectedSpacer" type="hidden">


                    <select class="custom_newliner_select"
                            onchange="document.getElementById('displaySelectedLiner').value=this.options[this.selectedIndex].text.split(' ')[1]==undefined?' ':this.options[this.selectedIndex].text.split(' ')[1]; document.getElementById('selectedLiner').value=this.options[this.selectedIndex].value;">
                        <option style="background-color:grey;color:white" value="default">Satır_ayracı \n</option>
                        <option value="newline">Yeni_satır \n</option>
                        <option value="semicolon">Notkalı_virgül ;</option>
                    </select>
                    <input type="text" name="displaySelectedLiner" id="displaySelectedLiner"
                           placeholder='Satır_ayracı \n' onfocus="this.select()"
                           class="custom_newliner_displayer">
                    <input name="selectedLiner" id="selectedLiner" type="hidden">

                </div>

                @* Ek Ayarlar *@
                <div class="veri_extra_options_column">
                    <select data-placeholder="Ek ayarlar" multiple class="chosen-select" name="extra_options" id="extra_options">
                        <option title="Sütunlara etiket ekle" value="add_col_labels">Sütun başlıkları ekle</option>
                        <option title="Satırlara etiket ekle" value="add_row_labels">Satır başlıkları ekle</option>
                        <option title="İlk satırı sütun etiketi olarak kullan" value="use_row_as_lbl">İlk satırı sütunlar için başlık yap</option>
                    </select>
                </div>

                @* Ekleme butonları *@
                <input id="veri_fromfile_create_button" type="button" class="button" value="Dosyayı oku" name="veri_fromfile_create" />
                <input id="veri_add_button" type="button" class="button" value="Oluştur" name="veri_create" currenttab="text" />

            </div>

            @* Kayıtlı dataframe tablosu *@
            <partial name="_VeriTablePartial" model=@ViewData["df_dict"] />

            @* Kayıtlı matris tablosu *@
            <table id="matris_table_base">
                <partial name="_MatrisTablePartial" model=@ViewData["matrix_dict"] />
            </table>
        </div>

        @* Panel bölücü *@
        <div id="panel_split"></div>

        @* Sağ panel *@
        <div id="right_panel_df">

            @* Panel başlığı *@
            <div id="veri_title_right">
                <h2>Veri Derleyici</h2>
            </div>

            @* Komut girme satırı *@
            <div id="veri_komut_panel">

                <span id="matris_komut_satır_df"
                      data-placeholder=">>> (örnek: (A+3)*5) (yardım için: ?)"
                      data-focused-advice="Yardım için '?' yazın"
                      contentEditable="true"
                      spellcheck="false"></span>

                <input id="veri_komut_button" type="button" class="button" value="Çözümle" name="veri_komut_btn" data-toggle="tooltip" data-placement="top" title="İfadeyi/Komutu çözümle" />
                <select id="veri_komut_options">
                    <partial name="_CommandSelectionPartial" model=@ViewData["komut_optionsdict"] />
                </select>

            </div>

            @* Komut çıktısı tablosu/bölgesi *@
            <div id="veri_komut_output">
                <table id="veri_komut_table_base">
                    <thead>
                        <tr>
                            <td style="color:white;text-align:left;padding:3px;font-weight:bold">Çıktılar</td>
                        </tr>
                    </thead>

                    @* Çıktılar *@
                    <tbody id="output_body_df">
                        <partial name="_dfOutputPanelPartial" model=@ViewData["output_history"] />
                    </tbody>

                </table>
            </div>
        </div>

    </div>
</body>

@* Tokenlere erişim için *@
<script>if (veri_add_button) { veri_add_button.token = "@token";}</script>
<script>if (veri_komut_button) { veri_komut_button.token = "@token";}</script>
<script>if (veri_fromfile_create_button) { veri_fromfile_create_button.token = "@token";}</script>
@* Ara panel için*@
<script>
    $("#left_panel_df").resizable({
        handleSelector: "#panel_split",
        resizeHeight: false,
    });

</script>
<script>
    function openNav() {
        document.getElementById("df_sidenav").style.width = "250px";
    }

    function closeNav() {
        document.getElementById("df_sidenav").style.width = "0";
    }
</script>
@* Sayfa yenilendiğinde listener'lar için*@
@* TO-DO: Daha düzgün bi yol bul*@
<script>

    function updatedfTable(token) {
        $('#veri_table_base').load('/Veri?handler=UpdateDataframeTable', { __RequestVerificationToken: token }, function () {
            var dfs = document.getElementById("veri_table_base");
            MathJax.Hub.Queue(["Typeset", MathJax.Hub, dfs]);
            // Butonları bul & eventlistener ekle
            var buttons = document.getElementsByName("veri_table_delbutton");
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].addEventListener("click", deleteDataframe, false);
                buttons[i].token = token;
            }

        });
    }

    function updateMatTable(token) {
        $('#matris_table_base').load('/Veri?handler=UpdateMatrisTable', { __RequestVerificationToken: token }, function () {
            var mat = document.getElementById("matris_table_base");
            MathJax.Hub.Queue(["Typeset", MathJax.Hub, mat]);
            // Butonları bul & eventlistener ekle
            var buttons = document.getElementsByName("matris_table_delbutton");
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].addEventListener("click", deleteMatrixDf, false);
                buttons[i].token = token;
            }

        });
    }

    function deleteMatrixDf(event) {
        var tkn = event.currentTarget.token;
        $.ajax(
            {
                type: 'POST',
                url: 'Veri?handler=DeleteMatrix',
                data:
                {
                    __RequestVerificationToken: tkn,
                    "name": event.currentTarget.id,
                },
                success: function (_data) { updateMatTable(tkn); updatedfTable(tkn); },
                error: function (error) { console.log(error); }
            });
    }

    function deleteDataframe(event) {
        var tkn = event.currentTarget.token;
        $.ajax(
            {
                type: 'POST',
                url: 'Veri?handler=DeleteDataframe',
                data:
                {
                    __RequestVerificationToken: tkn,
                    "name": event.currentTarget.id,
                },
                success: function (_data) { updateMatTable(tkn); updatedfTable(tkn); },
                error: function (error) { console.log(error); }
            });
    }
    updateMatTable('@token');
    updatedfTable('@token');
</script>
<script>
    $(".chosen-select").chosen({
        no_results_text: "Ayar bulunamadı!"
    })
</script>

<script>
    function visualsDropdown(name) {
        document.getElementById("visual_options_" + name).classList.toggle("visuals_show");
    }

    // Handle when clicked out of certain parts
    window.addEventListener("click", function (event) {
        if (!event.target.matches('.visuals_dropbtn')) {
            var dropdowns = document.getElementsByClassName("visuals_dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('visuals_show')) {
                    openDropdown.classList.remove('visuals_show');
                }
            }
        }

        if (!event.target.matches('.navcolumn_df')) {
            document.getElementById("df_sidenav").style.width = "0";
        }
    }, false);
</script>
<script>
    function displayChartDiv(name) {
        document.getElementById("chart_movable_" + name).style.display = "block";
    }
    function createChart(name, type, labels) {
        var ctx = document.getElementById('chart_'+name);
        var chart = new Chart(ctx, {
            type: type,
            data: {
                labels: ["sütun_1", "sütun_2", "sütun_3", "sütun_4", "sütun_5", "sütun_6"],
                datasets: [{
                    label: 'Örnek Bar Diyagramı',
                    data: [12, 19, 3, -4, 2, -30],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                    }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
        return chart;
    }
</script>
<script>
    function dragElement(name) {
        elmnt = document.getElementById("chart_movable_" + name);
        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
        if (document.getElementById(elmnt.id + "header")) {
            /* if present, the header is where you move the DIV from:*/
            document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
        } else {
            /* otherwise, move the DIV from anywhere inside the DIV:*/
            elmnt.onmousedown = dragMouseDown;
        }

        function dragMouseDown(e) {
            e = e || window.event;
            e.preventDefault();
            // get the mouse cursor position at startup:
            pos3 = e.clientX;
            pos4 = e.clientY;
            document.onmouseup = closeDragElement;
            // call a function whenever the cursor moves:
            document.onmousemove = elementDrag;
        }

        function elementDrag(e) {
            e = e || window.event;
            e.preventDefault();
            // calculate the new cursor position:
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        }

        function closeDragElement() {
            /* stop moving when mouse button is released:*/
            document.onmouseup = null;
            document.onmousemove = null;
        }
    }
</script>